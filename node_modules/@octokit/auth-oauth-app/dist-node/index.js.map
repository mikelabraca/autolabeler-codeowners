{"version":3,"file":"index.js","sources":["../dist-src/get-oauth-access-token.js","../dist-src/requires-basic-auth.js","../dist-src/auth.js","../dist-src/hook.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["import { RequestError } from \"@octokit/request-error\";\nexport async function getOAuthAccessToken(state, customRequest) {\n    if (!state.token) {\n        // The \"/login/oauth/access_token\" is not part of the REST API hosted on api.github.com,\n        // instead it’s using the github.com domain.\n        const route = /^https:\\/\\/(api\\.)?github\\.com$/.test(state.request.endpoint.DEFAULTS.baseUrl)\n            ? \"POST https://github.com/login/oauth/access_token\"\n            : `POST ${state.request.endpoint.DEFAULTS.baseUrl.replace(\"/api/v3\", \"/login/oauth/access_token\")}`;\n        const request = customRequest || state.request;\n        const parameters = {\n            headers: {\n                accept: \"application/json\"\n            },\n            client_id: state.clientId,\n            client_secret: state.clientSecret,\n            code: state.code,\n            redirect_uri: state.redirectUrl,\n            state: state.state\n        };\n        const response = await request(route, parameters);\n        if (response.data.error !== undefined) {\n            throw new RequestError(`${response.data.error_description} (${response.data.error})`, response.status, {\n                headers: response.headers,\n                request: request.endpoint(route, parameters)\n            });\n        }\n        const { data } = response;\n        state.token = {\n            token: data.access_token,\n            scopes: data.scope.split(/,\\s*/).filter(Boolean)\n        };\n    }\n    return state.token;\n}\n","/**\n * An OAuth app authenticates using ?client_id=...&client_secret=... query parameters, with the\n * exception of these three endpoints, which require the client ID/secret to be sent as basic auth\n * - [`GET /applications/:client_id/tokens/:access_token`](https://developer.github.com/v3/oauth_authorizations/#check-an-authorization) - Check an authorization\n * - [`POST /applications/:client_id/tokens/:access_token`](https://developer.github.com/v3/oauth_authorizations/#reset-an-authorization) - Reset an authorization\n * - [`DELETE /applications/:client_id/tokens/:access_token`](https://developer.github.com/v3/oauth_authorizations/#revoke-an-authorization-for-an-application) - Revoke an authorization for an application\n */\nconst OAUTH_ROUTES_EXCEPTIONS_REGEX = /\\/applications\\/:?[\\w_]+\\/tokens\\/:?[\\w_]+($|\\?)/;\nexport function requiresBasicAuth(url) {\n    return url && OAUTH_ROUTES_EXCEPTIONS_REGEX.test(url);\n}\n","import btoa from \"btoa-lite\";\nimport { getOAuthAccessToken } from \"./get-oauth-access-token\";\nimport { requiresBasicAuth } from \"./requires-basic-auth\";\nexport async function auth(state, authOptions) {\n    if (authOptions.type === \"token\") {\n        const { token, scopes } = await getOAuthAccessToken(state);\n        return {\n            type: \"token\",\n            token,\n            tokenType: \"oauth\",\n            scopes\n        };\n    }\n    const [headers, query] = requiresBasicAuth(authOptions.url)\n        ? [\n            {\n                authorization: `basic ${btoa(`${state.clientId}:${state.clientSecret}`)}`\n            },\n            {}\n        ]\n        : [\n            {},\n            {\n                client_id: state.clientId,\n                client_secret: state.clientSecret\n            }\n        ];\n    return {\n        type: \"oauth-app\",\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        headers,\n        query\n    };\n}\n","import btoa from \"btoa-lite\";\nimport { getOAuthAccessToken } from \"./get-oauth-access-token\";\nimport { requiresBasicAuth } from \"./requires-basic-auth\";\nexport async function hook(state, request, route, parameters) {\n    let endpoint = request.endpoint.merge(route, parameters);\n    const { token } = await getOAuthAccessToken(state, request);\n    if (!requiresBasicAuth(endpoint.url)) {\n        endpoint.headers.authorization = `token ${token}`;\n        return request(endpoint);\n    }\n    const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n    endpoint.headers.authorization = `basic ${credentials}`;\n    // default `:client_id` & `:access_token` URL parameters\n    if (endpoint.url && /:client_id/.test(endpoint.url)) {\n        endpoint = Object.assign({\n            client_id: state.clientId,\n            access_token: token\n        }, endpoint);\n    }\n    const response = await request(endpoint);\n    // `POST /applications/:client_id/tokens/:access_token` resets the passed token\n    // and returns a new one. If that’s the current request then update internal state.\n    const parsedEndpoint = request.endpoint.parse(endpoint);\n    const isTokenResetRequest = parsedEndpoint.method === \"POST\" &&\n        new RegExp(token).test(parsedEndpoint.url);\n    if (isTokenResetRequest && state.token) {\n        state.token.token = response.data.token;\n    }\n    return response;\n}\n","export const VERSION = \"2.2.1\";\n","import { getUserAgent } from \"universal-user-agent\";\nimport { request } from \"@octokit/request\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { VERSION } from \"./version\";\nexport function createOAuthAppAuth(options) {\n    const state = Object.assign({\n        request: request.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`\n            }\n        })\n    }, options);\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state)\n    });\n}\n"],"names":["getOAuthAccessToken","state","customRequest","token","route","test","request","endpoint","DEFAULTS","baseUrl","replace","parameters","headers","accept","client_id","clientId","client_secret","clientSecret","code","redirect_uri","redirectUrl","response","data","error","undefined","RequestError","error_description","status","access_token","scopes","scope","split","filter","Boolean","OAUTH_ROUTES_EXCEPTIONS_REGEX","requiresBasicAuth","url","auth","authOptions","type","tokenType","query","authorization","btoa","hook","merge","credentials","Object","assign","parsedEndpoint","parse","isTokenResetRequest","method","RegExp","VERSION","createOAuthAppAuth","options","defaults","getUserAgent","bind"],"mappings":"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"}